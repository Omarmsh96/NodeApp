version: "3"
services:
  node-app:
    image: omarhassan96/dockerapp1
    container_name: dockerapp
    build: 
      context: .
      target: development
      #args: 
       # - NODE_ENV = development
    volumes:
      - ./src:/app/src:ro
   # ports:
   #    - "4000:4000"
    command: npm run start-dev 
    environment:
      - NODE_ENV=development
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example 

  nginx:
    image: nginx:stable-alpine
    ports:
      - "8090:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app     # dont run nginx untill container of the app is running


volumes:
  mongo-db:      #store the data of the containers on local hard drive 
    


#docker-compose -f docker-compose.dev.yml up 
# docker-compose -f docker-compose.dev.yml up --build 
# docker exec -it docker-mongo-1 mongosh -u root -p example  show dbs . create new db -> use test , create collection => db.book.insert({tile:}) -db.book.find() 
# remove un unused volume  --: docker volume prune
